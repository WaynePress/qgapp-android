apply plugin: 'com.android.application'
// In your app projects build.gradle file:
apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao' // apply plugin
apply plugin: 'io.fabric'

android {
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    signingConfigs {
        config {
            keyAlias 'youdian'
            keyPassword '123456'
            storeFile file('../youdian.jks')
            storePassword '123456'
        }
    }
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.youdianapp.android"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 112
        versionName "1.1.2"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        renderscriptTargetApi 25    //添加
        renderscriptSupportModeEnabled true  //添加


        ndk {
            //选择要添加的对应 cpu 类型的 .so 库。
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME : applicationId,
                JPUSH_APPKEY : "538be7ac103bb8a138aa5dc7", //JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
        ]


        android.applicationVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "video_${variant.versionCode}_v${variant.versionName}_${releaseTime()}.apk"
            }
        }

        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
//        debug {
//            signingConfig signingConfigs.config
//        }
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

}

def releaseTime() {
    return new Date().format("yyyy-MM-dd-HH-mm", TimeZone.getTimeZone("Asia/Shanghai"))
}

dependencies {
    configurations {
        all*.exclude group: 'com.android.support', module: 'support-v13'
    }

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.1.0'

    //https://github.com/square/retrofit
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.4.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'

    //https://github.com/ReactiveX/RxAndroid

    // Because RxAndroid releases are few and far between, it is recommended you also

    // explicitly depend on RxJava's latest version for bug fixes and new features.

    // (see https://github.com/ReactiveX/RxJava/releases for latest 2.x.x version)
    implementation 'io.reactivex.rxjava2:rxjava:2.x.x'

    //https://github.com/ReactiveX/RxJava
    implementation 'com.jakewharton.rxbinding3:rxbinding:3.0.0-alpha1'
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'

    //.addCallAdapterFactory(RxJava2CallAdapterFactory.create())//使用rxjava https://cloud.tencent.com/developer/ask/86681

    //浏览器调试
    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'

    //Android框架之路——Fragmentation 的使用  https://github.com/YoKeyword/Fragmentation

    // To get SwipeBack feature, rely on both fragmentation & fragmentation-swipeback
    implementation 'me.yokeyword:fragmentation:1.3.3'

    // Swipeback is based on fragmentation. Refer to SwipeBackActivity/Fragment for your Customized SupportActivity/Fragment
    implementation 'me.yokeyword:fragmentation-swipeback:1.3.3'

    //https://github.com/gyf-dev/ImmersionBar  4.4以上沉浸式状态栏和沉浸式导航栏管理
    implementation 'com.gyf.barlibrary:barlibrary:2.3.0'
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    //SnackBar是 Android Support Library 22.2.0 里面新增提供的一个控件,我们可以简单的把它理解成一个加强版的Toast，或者是一个轻量级的Dialog
    implementation 'com.android.support:design:27.1.1'

    //选择器 https://github.com/Bigkoo/Android-PickerView
    implementation 'com.contrarywind:Android-PickerView:4.1.3'

    //https://github.com/CymChad/BaseRecyclerViewAdapterHelper  RecyclerAdapter框架
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.30'

    //https://github.com/lcodecorex/TwinklingRefreshLayout 下拉刷新上拉加载
    implementation 'com.lcodecorex:tkrefreshlayout:1.0.7'

    //https://github.com/greenrobot/EventBus
    implementation 'org.greenrobot:eventbus:3.1.1'

    //https://github.com/bumptech/glide
    implementation 'com.github.bumptech.glide:glide:4.7.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.7.1'

    //视频播放 https://github.com/lipangit/JiaoZiVideoPlayer
    implementation 'cn.jzvd:jiaozivideoplayer:6.2.10'

    //    //动态权限 https://github.com/jokermonn/permissions4m

    //    implementation 'com.github.jokermonn:permissions4m:2.1.2-lib'

    //    annotationProcessor 'com.github.jokermonn:permissions4m:2.1.2-processor'

    //    https://github.com/googlesamples/easypermissions

    //    implementation 'pub.devrel:easypermissions:2.0.0'

    //https://github.com/nex3z/FlowLayout
    implementation 'com.nex3z:flow-layout:1.2.2'
    implementation files('libs/SecurityEnvSDK-release-1.1.0.jar')
//    implementation files('libs/umeng-common-1.5.4.jar')
//    implementation files('libs/umeng-share-core-6.9.4.jar')
//    implementation files('libs/umeng-share-QQ-simplify-6.9.4.jar')
//    implementation files('libs/umeng-share-wechat-full-6.9.4.jar')
//    implementation files('libs/umeng-shareboard-widget-6.9.4.jar')
//    implementation files('libs/umeng-sharetool-6.9.4.jar')
    implementation files('libs/utdid4all-1.1.5.3_proguard.jar')
//    implementation files('libs/wechat-sdk-android-without-mta-5.1.4.jar')
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.umeng.umsdk:analytics:8.0.0'
    implementation 'com.umeng.umsdk:common:2.0.0'


    //https://github.com/yipianfengye/android-zxingLibrary 二维码识别
    implementation 'cn.yipianfengye.android:zxing-library:2.2'
    implementation "com.github.hotchemi:permissionsdispatcher:3.3.1"
    annotationProcessor "com.github.hotchemi:permissionsdispatcher-processor:3.3.1"

    //美恰 客服功能 https://meiqia.com/docs/meiqia-android-sdk#androidstudio
    implementation 'com.meiqia:meiqiasdk:3.5.0@aar'
//    implementation 'com.android.support:support-v4:23.1.1'
    implementation 'com.squareup.okhttp3:okhttp:3.5.0'

    //下载 https://github.com/yaowen369/DownloadHelper
    implementation 'com.yaoxiaowen:download:1.3.0'
    implementation 'org.greenrobot:greendao:3.2.2'
    implementation 'com.github.javaexception:FuzzyBackground:v1.0'

//  app升级  https://github.com/WVector/AppUpdate
    implementation 'com.qianwen:update-app:3.5.2'
    implementation 'com.zhy:okhttputils:2.6.2'

//    implementation 'cn.jiguang.sdk:jpush:3.2.0'  // 此处以JPush 3.2.0 版本为例。
//    implementation 'cn.jiguang.sdk:jcore:1.2.7'  // 此处以JCore 1.2.7 版本为例。
    //错误分析
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.9@aar') {
        transitive = true;
    }
    implementation('com.crashlytics.sdk.android:answers:1.4.7@aar') {
        transitive = true;
    }
    // add library
}
greendao {
    schemaVersion 1 //数据库版本号
    daoPackage 'com.app.video.videoapp.database' //设置时生成代码的目录
    targetGenDir 'src/main/java' //设置DaoMaster、DaoSession、Dao目录
}
7